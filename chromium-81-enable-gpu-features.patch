diff -up chromium-99.0.4840.0/gpu/config/gpu_finch_features.cc.15~ chromium-99.0.4840.0/gpu/config/gpu_finch_features.cc
--- chromium-99.0.4840.0/gpu/config/gpu_finch_features.cc.15~	2022-01-28 17:28:03.509291683 +0100
+++ chromium-99.0.4840.0/gpu/config/gpu_finch_features.cc	2022-01-28 18:14:37.460099550 +0100
@@ -122,11 +122,12 @@ const base::FeatureParam<std::string>
 // Enable GPU Rasterization by default. This can still be overridden by
 // --enable-gpu-rasterization or --disable-gpu-rasterization.
 // DefaultEnableGpuRasterization has launched on Mac, Windows, ChromeOS, and
-// Android.
+// Android. And of course it works on Linux too, just because Google hates
+// Linux doesn't mean we have to.
 const base::Feature kDefaultEnableGpuRasterization{
   "DefaultEnableGpuRasterization",
 #if BUILDFLAG(IS_MAC) || BUILDFLAG(IS_WIN) || BUILDFLAG(IS_CHROMEOS_ASH) || \
-    BUILDFLAG(IS_ANDROID) || BUILDFLAG(IS_FUCHSIA)
+    BUILDFLAG(IS_ANDROID) || BUILDFLAG(IS_FUCHSIA) || BUILDFLAG(IS_LINUX)
       base::FEATURE_ENABLED_BY_DEFAULT
 #else
       base::FEATURE_DISABLED_BY_DEFAULT
@@ -155,7 +156,7 @@ const base::Feature kGpuProcessHighPrior
 // Use ThreadPriority::DISPLAY for GPU main, viz compositor and IO threads.
 const base::Feature kGpuUseDisplayThreadPriority{
   "GpuUseDisplayThreadPriority",
-#if BUILDFLAG(IS_ANDROID) || BUILDFLAG(IS_CHROMEOS_ASH) || BUILDFLAG(IS_WIN)
+#if BUILDFLAG(IS_ANDROID) || BUILDFLAG(IS_CHROMEOS_ASH) || BUILDFLAG(IS_WIN) || BUILDFLAG(IS_LINUX)
       base::FEATURE_ENABLED_BY_DEFAULT
 #else
       base::FEATURE_DISABLED_BY_DEFAULT
